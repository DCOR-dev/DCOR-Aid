# Use large clone depth so that a tag is included for versioning
clone_depth: 256
image: Visual Studio 2019

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

environment:
  matrix:
    - PYTHON: "C:\\Python310-x64"
  DCOR_API_KEY:
    secure: fZWCZrKoGp2a/bNqd+quJRsVcRI5Jx774LLx3BX3jDuFAqHEAkGR3M/Wq7IwxXua

init:
  - ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%

install:
  # Install InnoSetup and add to path
  - appveyor-retry choco install -y InnoSetup
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  # Check that we have the expected version and architecture for Python
  - python --version
  # Install dcoraid and its dependencies
  - appveyor-retry python -m pip install --upgrade pip wheel
  # install build requirements (pinned versions of some packages)
  - python -m pip install -r tests\\requirements.txt
  - python -m pip install -r build-recipes\\win_build_requirements.txt
  # Install package
  - appveyor-retry pip install -e .[GUI]
  # Show the installed packages
  - pip freeze

build: off

test_script:
  - python -c "import dcoraid; print(dcoraid.__version__)"
  - pip install coverage
  - pip install pytest pytest-qt
  - python -m coverage run --source=dcoraid -m pytest tests --ignore tests/test_gui.py -x
  # sometimes GUI tests fail due to threading issues
  - python -m coverage run --source=dcoraid -m pytest tests/test_gui.py -x || exit 0
  # check if pytest wrote failures to the "pytest-failures.txt" file
  # (exits 0 if the file does not exist)
  - if exist pytest-failures.txt exit 1
  - python -m coverage report -m

after_test:
  - appveyor-retry pip install twine wheel
  # If tests are successful, create a whl package for the project.
  - python setup.py bdist_wheel
  - python setup.py sdist
  - ps: "ls dist"
  # Run pyinstaller
  - cd build-recipes
  - pyinstaller -y --log-level=WARN win_DCOR-Aid.spec
  # Run the binary (the most simple test)
  - dist\\DCOR-Aid\\DCOR-Aid.exe --version
  # Create InnoSetup installers
  # Generate iss file
  - python win_make_iss.py
  # Set InnoSetup path here, because Cython complained about it.
  - set PATH=%PATH%;"C:\\Program Files (x86)\\Inno Setup 5"
  - iscc /Q win_dcoraid.iss

artifacts:
  # InnoSetup files
  - path: build-recipes\Output\*

deploy:
  provider: GitHub
  auth_token:
    secure: u94ePbzUmuyh5jZU+1xvST73Ueuxepu86/XQsGx/15AnSd4NhQHKE1UXIe1vBIwf
  artifact: /.*\.exe/
  draft: true
  on:
    appveyor_repo_tag: true        # deploy on tag push only
